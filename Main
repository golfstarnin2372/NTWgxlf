_G.OnlyRareItemPlus = true
_G.ShowLegendary = true
_G.Delay = 6


pcall(function()
    repeat wait()
        if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
                for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                    v.Function()
                end
             end
    until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
end)

Req = syn.request 
User = game.Players.LocalPlayer.Name
Req({
    Method = "POST",
    Url = "http://localhost:7963/SetAlias?Account=" ..User,
    Body = "[ Hee Service ]"
    })
Req({
    Method = "POST",
    Url = "http://localhost:7963/SetDescription?Account=" ..User,
    Body = "Welcome to Hee Service"..os.date(': %H:%M:%S')
    })
wait(2)
if not isfolder("Hee Service") then
    Req({
        Method = "POST",
        Url = "http://localhost:7963/SetDescription?Account=" ..User,
        Body = "[ Please Disabled Anti-virus ]"
        })
end



if not Nexus.IsConnected then
    Req({
        Method = "POST",
        Url = "http://localhost:7963/SetAlias?Account=" ..User,
        Body = " "
        })
    Req({
        Method = "POST",
        Url = "http://localhost:7963/SetDescription?Account=" ..User,
        Body = "[ Waiting Account Control ]"
        })
end



repeat task.wait() until Nexus.IsConnected

local folders = {
    "Hee Service"
}

for _, folder in ipairs(folders) do
    if not isfolder(folder) then
        makefolder(folder)
    end
end



if not isfile("Hee Service/Enter Password.json") then
    writefile("Hee Service/Enter Password.json", game:GetService("HttpService"):JSONEncode(''))
end

if not isfile("Hee Service/Enter Password.json") then
    Req({
        Method = "POST",
        Url = "http://localhost:7963/SetDescription?Account=" ..User,
        Body = "[ Please Disabled Anti-virus ]"
        })
end
repeat task.wait() until isfile("Hee Service/Enter Password.json")

function GetMaterial(matname)
    for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
        if type(v) == "table" then
            if v.Type == "Material" then
                if v.Name == matname then
                    return true
                end
            end
        end
    end
    return false
end

Req({
        Method = "POST",
        Url = "http://localhost:7963/SetDescription?Account=" ..  game.Players.LocalPlayer.Name,
        Body = "[ Loading Script"..os.date(': %H:%M:%S').." ]"
    })

local Level = game:GetService("Players").LocalPlayer.Data.Level.Value
local Request = syn.request
local function formatNumber(number)
local i, k, j = tostring(number):match("(%-?%d?)(%d*)(%.?.*)")
    return i .. k:reverse():gsub("(%d%d%d)", "%1,"):reverse() .. j
end
local MyFruit = game:GetService("Players").LocalPlayer.Data.DevilFruit.Value
local CurrentFruitName = ""
if MyFruit == "" then
    CurrentFruitName = "None"
else
    CurrentFruitName = string.match(MyFruit, "%-(.*)")
end

wait(5)
spawn(function()
    while wait(_G.Delay) do
        local World = ""
        local Money = ""
        local Username = game.Players.LocalPlayer.Name
        local Fragment = ""
        local Level = ""
        local Fruit = ""
        local Material = ""
        local Race = ""
        local FruitMastery = ""
        local Gun = ""
        local HttpService = game:GetService("HttpService")
        local Malee = ""
        local Sword = ""
        local Accesorry = ""
        local Awake = ""
        local Combo = ""
        local Evo = ""
        local MFStatus = "❌"
        local HelmedStatus = "❌"   

        function format_number_(n)
            local x = n
            local res = x:gsub(",","")
            return tonumber(res)
        end
        function foo(n)
            if n >= 10^6 then
                return string.format("%.0fM", n / 10^6)
            elseif n >= 10^3 then
                return string.format("%.0fK", n / 10^3)
            else
                return tostring(n)
            end
        end
        Money = foo(format_number_(formatNumber(game:GetService("Players").LocalPlayer.Data.Beli.Value)))
        Fragment = foo(format_number_(formatNumber(game:GetService("Players").LocalPlayer.Data.Fragments.Value)))
        Race = game:GetService("Players").LocalPlayer.Data.Race.Value
        Level = game:GetService("Players").LocalPlayer.Data.Level.Value
        local placeId = game.PlaceId
        if placeId == 2753915549 then
            World = "1"
        elseif placeId == 4442272183 then
            World = "2"
        elseif placeId == 7449423635 then
            World = "3"
        end
        
        RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
        for i, v in pairs(RequestgetInventory) do
            if v["Type"] == "Sword" then
                if Sword == "" then
                    if _G.HeeBF["LogInventory"] and _G.OnlyRareItemPlus  then
                        if table.find(_G.HeeBF["LogInventory"], v["Name"]) then
                            Sword = v["Name"].."[Mas Lv. "..v["Mastery"].."]"
                        end
                    else
                        Sword = v["Name"].."[Mas Lv. "..v["Mastery"].."]"
                    end
                else
                    if _G.HeeBF["LogInventory"] and _G.OnlyRareItemPlus then
                        if table.find(_G.HeeBF["LogInventory"], v["Name"]) then
                            Sword = Sword..", ".. v["Name"].."[Mas Lv."..v["Mastery"].."]"
                        end
                    else
                        Sword = Sword..", ".. v["Name"].."[Mas Lv."..v["Mastery"].."]"
                    end
                end
            end
            if v["Type"] == "Wear" then
                if Accesorry == "" then
                    Accesorry = v["Name"] .. " "
                else
                    Accesorry = Accesorry .. v["Name"] .. " "
                end
            end
            if v["Type"] == "Blox Fruit" then
                if Fruit == "" then
                    if _G.ShowLegendary then
                        if v["Rarity"] == 3 or v["Rarity"] == 4 then
                            Fruit = v["Name"] 
                        end
                    else
                        Fruit = v["Name"] 
                    end
                else
                    if _G.ShowLegendary then
                        if v["Rarity"] == 3 or v["Rarity"] == 4 then
                            Fruit = Fruit .." \n"..v["Name"] 
                        end
                    else
                        Fruit = Fruit .. " \n"..v["Name"] 
                    end
                end
            end
            if v["Type"] == "Material" then
                if Material == "" then
                    Material = v["Name"] .. " "
                else
                    Material = Material .. v["Name"] .. "( x" .. v["Count"] .. " )" .. " "
                end
            end
            if v["Type"] == "Gun" then
                if Gun == "" then
                    Gun = v["Name"] .. " "
                else
                    Gun = Gun .. v["Name"] .. " "
                end
            end
        end
        
        
        local args = {[1] = "BuyDeathStep",[2] = true}
        DeathStep = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if DeathStep == 1 then
            HasDeathStep = true
        else
            HasDeathStep = false
        end
        wait(0.2)
        

        local args = {[1] = "BuySharkmanKarate",[2] = true}
        SharkmanKarate = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if SharkmanKarate == 1 then
            HasSharkmanKarate = true
        else
            HasSharkmanKarate = false
        end
        wait(0.2)
        
        
        local args = {[1] = "BuySuperhuman",[2] = true}
        Superhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if Superhuman == 1 then
            HasSuperhuman = true
        else
            HasSuperhuman = false
        end
        wait(0.2)
        
        
        local args = {[1] = "BuyElectricClaw",[2] = true}  
        ElectricClaw = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if ElectricClaw == 1 then
            HasElectricClaw = true
        else
            HasElectricClaw = false
        end
        wait(0.2)


        local args = {[1] = "BuyDragonTalon",[2] = true}
        DragonTalon = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if type(DragonTalon) == "number" then
            if DragonTalon == 1 then
                HasDragonTalon = true
            else
                HasDragonTalon = false
            end
        end
        wait(0.2)


        local args = {[1] = "BuyGodhuman",[2] = true}
        Godhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if type(Godhuman) == "number" then
            if Godhuman == 1 then
                HasGodhuman = true
            else
                HasGodhuman = false
            end
        end


        MeleeCount = 0
        if HasSuperhuman then
            Malee = Malee .. "\nSuperhuman,"
            MeleeCount = MeleeCount + 1
        end
        if HasDeathStep then
            Malee = Malee .. "DeathStep,"
            MeleeCount = MeleeCount + 1
        end
        if HasElectricClaw then
            Malee = Malee .. "ElectricClaw,"
            MeleeCount = MeleeCount + 1
        end
        if HasSharkmanKarate then
            Malee = Malee .. "Sharkman Karate,"
            MeleeCount = MeleeCount + 1
        end
        if HasDragonTalon then
            Malee = Malee .. "Dragon Talon,"
            MeleeCount = MeleeCount + 1
        end
        if HasGodhuman then
            Malee = Malee .. "Godhuman"
            MeleeCount = MeleeCount + 1
        end
        
        for _i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                if v.ToolTip == "Blox Fruit" then
                    FruitMastery = v.Level.Value
                    FruitName = v.Name
                end
            end
        end
        r = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getAwakenedAbilities")
        if r then
            for i, v in pairs(r) do
                if v["Awakened"] then
                    Awake = Awake .. i .. " "
                end
            end
        else
            Awake = "None"
        end
        if game:GetService("Players").LocalPlayer.Data.Race:FindFirstChild("Evolved") then
            Evo = ""
        else
            Evo = "No"
        end
        --Sword
        function GetWeaponInventory(Weaponname)
            for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
                if v.Type == "Sword" then
                    if v.Name == Weaponname then
                        return true
                    end
                end
            end
        end
        if GetWeaponInventory("Cursed Dual Katana") then
            CDKYed = true
        end
        --Gun
        function GetWeaponGun(Gunname)
            RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
            for i,x in pairs(RequestgetInventory) do
                if x["Type"] == "Gun" then
                    if x["Name"] == Gunname then
                    return true
                    end
                end
            end 
        end
        if GetWeaponGun("Soul Guitar") then
            SoulG = true
        end
         
        Awaked = S
        HHH = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getAwakenedAbilities")
        if HHH then
        S = 0	
            for i, v in pairs(HHH) do
            if v["Awakened"] then
                    S = S + 1
                end
            end
        else
           S = 0
        end
        AwakeLimitsStatus = 5
        AwakedStat = ""
        if CurrentFruitName == 'Dough' then
            AwakeLimitsStatus = 6
            if S == 6 then 
                Awaked = "Full" 
            end
        else 
            if S == 5 then
                Awaked = "Full "
            end
        end 
        
        if CurrentFruitName == "Dough" then
            if S == 6 then
                AwakedStat = "F."
            end
        elseif CurrentFruitName == "Quake" then
            if S == 4 then
                AwakedStat = "F."
            end
        else
            if S == 5 then
                AwakedStat = "F."
            end
        end

        for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryWeapons")) do
            if  v.Name == "Valkyrie Helm" then
                Helmed = true
            end
        end
        if GetMaterial("Mirror Fractal") == true then
            MFStatus = "✅"
            end
        if Helmed == true then
            HelmedStatus = "✅"
        end

        HeeDes = ""
        if _G.HeeBF["Log Mode"] == 1 then
            HeeDes = HeeDes..AwakedStat..CurrentFruitName.." ➢ W :"..World.."  M:"..Money.."  F:"..Fragment.."  \nValkyrie Helm : "..HelmedStatus.."  \nMirror Fractal : "..MFStatus.."\n".."\n-----Fruit Inventory-----\n"..Fruit.."\n".." \n-----Melee-----"..Malee.."\n".."\n-----Inventory-----".."\n"..Sword
        end
            
        Request({
                Method = "POST",
                Url = "http://localhost:7963/SetDescription?Account=" .. Username,
                Body = HeeDes
                })
    end
end)









spawn(function()
    while wait(_G.Delay) do
        local Username = game.Players.LocalPlayer.Name
        local Level = game:GetService("Players").LocalPlayer.Data.Level.Value
        local args = {[1] = "BuyDeathStep",[2] = true}
        DeathStep = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if DeathStep == 1 then
            HasDeathStep = true
        else
            HasDeathStep = false
        end
        wait(0.2)
        

        local args = {[1] = "BuySharkmanKarate",[2] = true}
        SharkmanKarate = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if SharkmanKarate == 1 then
            HasSharkmanKarate = true
        else
            HasSharkmanKarate = false
        end
        wait(0.2)
        
        
        local args = {[1] = "BuySuperhuman",[2] = true}
        Superhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if Superhuman == 1 then
            HasSuperhuman = true
        else
            HasSuperhuman = false
        end
        wait(0.2)
        
        
        local args = {[1] = "BuyElectricClaw",[2] = true}  
        ElectricClaw = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if ElectricClaw == 1 then
            HasElectricClaw = true
        else
            HasElectricClaw = false
        end
        wait(0.2)


        local args = {[1] = "BuyDragonTalon",[2] = true}
        DragonTalon = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if type(DragonTalon) == "number" then
            if DragonTalon == 1 then
                HasDragonTalon = true
            else
                HasDragonTalon = false
            end
        end
        wait(0.2)


        local args = {[1] = "BuyGodhuman",[2] = true}
        Godhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if type(Godhuman) == "number" then
            if Godhuman == 1 then
                HasGodhuman = true
            else
                HasGodhuman = false
            end
        end

        local FruitName = ""
        HHH = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getAwakenedAbilities")
        if HHH then
        S = 0	
            for i, v in pairs(HHH) do
                if v["Awakened"] then
                    S = S + 1
                end
        end
        else
            S = "0"
        end
        StatusAwake = ""

            StatusAwake = "Awaked".."{"..S.."}"

        function GetWeaponInventory(Weaponname)
            for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
                if v.Type == "Sword" then
                    if v.Name == Weaponname then
                        return true
                    end
                end
            end
        end
        --[[if GetWeaponInventory("Cursed Dual Katana") then
            CDKYed = true
        end]]


        RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
        for i,x in pairs(RequestgetInventory) do
            if x["Type"] == "Gun" then
                if x["Name"] == "Soul Guitar" then
                    SG = true   
                end
            end
        end

        if CDKHas then
        CDK = true
        end
        if HasSuperhuman  then
        OneMalee = true
        end
        if HasSuperhuman and HasDeathStep  then
        TwoMalee = true
        end
        if HasSuperhuman and HasDeathStep and HasSharkmanKarate then
        ThreeMalee = true
        end 
        if HasSuperhuman and HasDeathStep and HasSharkmanKarate and HasElectricClaw then
        FourMalee = true
        end
        if HasSuperhuman and HasDeathStep and HasSharkmanKarate and HasElectricClaw and HasDragonTalon then
        FiveMalee = true
        end
        if HasDragonTalon and HasElectricClaw and HasSuperhuman and HasSharkmanKarate and HasDeathStep and HasGodhuman then
        SixMalee = true
        end 

        Doughh = game:GetService("Players").LocalPlayer.Data.DevilFruit.Value
        if Doughh == "Dough-Dough" then
        Moji = true
        end
        af = S == 6

        local showraceSave = ""
        local THrace = ""
        local Racee = game.Players.LocalPlayer.Data.Race.Value
        local RaceV2 = game:GetService("Players").LocalPlayer.Data.Race:FindFirstChild("Evolved")
        local RaceV4 = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Awakening")
        local Ghoull = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Heightened Senses")
        local Angell = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Heavenly Blood")
        local Humann = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Last Resort")
        local Minkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Agility")
        local Sharkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Water Body")
        local Cybrogg = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Energy Core")

        if Racee == "Human" then
        THrace = "มนุษย์ "
        elseif Racee == "Mink" then
        THrace = "มิ้ง "
        elseif Racee == "Skypiea" then
        THrace = "นางฟ้า "
        elseif Racee == "Fishman" then
        THrace = "เงือก "
        elseif Racee == "Cybrog" then
        THrace = "ไซบ็อก "
        elseif Racee == "Ghoul" then
        THrace = "กูล "
        end

        if RaceV4 then
        showrace = THrace .."v4👑"
        elseif Humann then
        showrace = THrace .."v3"
        elseif Minkk then
        showrace = THrace .."v3"
        elseif Angell then
        showrace = THrace.."v3"
        elseif Sharkk then
        showrace = THrace.."v3"
        elseif Cybrogg  then
        showrace = THrace.."v3"
        elseif Ghoull then
        showrace = THrace.."v3"
        elseif RaceV2 then 
        showrace = THrace.."V2"
        else
        showrace = THrace.."V1"
        end


        HeeAl = ""
        if _G.HeeBF["Log Mode"] == 1 then
        HeeAl = "[ "
        if Level == 2450 then
            if SixMalee and Moji and af and CDK then
                HeeAl = HeeAl .. "โมตื่นดาบคู่  "..showrace
            elseif SixMalee and CDK and Moji then
                HeeAl = HeeAl .. "โมไม่ตื่นดาบคู่  "..showrace
            elseif SixMalee and Moji and af  then
                HeeAl = HeeAl .. "โมตื่น6หมัด  "..showrace
            elseif SixMalee and Moji then
                HeeAl = HeeAl .. "โมไม่ตื่น6หมัด  "..showrace
            elseif SixMalee and CDK then
                HeeAl = HeeAl .. "ดาบคู่  "..showrace
            elseif SixMalee then
                HeeAl = HeeAl .. "6หมัด  "..showrace
    
            elseif FiveMalee and Moji and af and CDK then
                HeeAl = HeeAl .. "5หมัด👊 ดาบคู่⚔️ โมจิตื่นครบ🎂"
            elseif FiveMalee and CDK and Moji then
                HeeAl = HeeAl .. "5หมัด👊 ดาบคู่⚔️ โมจิตื่นไม่ครบ🎂"
            elseif FiveMalee and Moji and af  then
                HeeAl = HeeAl .. "5หมัด👊 โมจิตื่นครบ🎂"
            elseif FiveMalee and Moji then
                HeeAl = HeeAl .. "5หมัด👊 โมจิตื่นไม่ครบ🎂"
            elseif FiveMalee and CDK then
                HeeAl = HeeAl .. "5หมัด👊 ดาบคู่⚔️"
            elseif FiveMalee then
                HeeAl = HeeAl .. "5หมัด👊"   
                
            elseif FourMalee and Moji and af and CDK then
                HeeAl = HeeAl .. "4หมัด👊 ดาบคู่⚔️ โมจิตื่นครบ🎂"
            elseif FourMalee and CDK and Moji then
                HeeAl = HeeAl .. "4หมัด👊 ดาบคู่⚔️ โมจิตื่นไม่ครบ🎂"
            elseif FourMalee and Moji and af  then
                HeeAl = HeeAl .. "4หมัด👊 โมจิตื่นครบ🎂"
            elseif FourMalee and Moji then
                HeeAl = HeeAl .. "4หมัด👊 โมจิตื่นไม่ครบ🎂"
            elseif FourMalee and CDK then
                HeeAl = HeeAl .. "4หมัด👊 ดาบคู่⚔️"
            elseif FourMalee then
                HeeAl = HeeAl .. "4หมัด👊"   
                
            elseif ThreeMalee and Moji and af and CDK then
                HeeAl = HeeAl .. "3หมัด👊 ดาบคู่⚔️ โมจิตื่นครบ🎂"
            elseif ThreeMalee and CDK and Moji then
                HeeAl = HeeAl .. "3หมัด👊 ดาบคู่⚔️ โมจิตื่นไม่ครบ🎂"
            elseif ThreeMalee and Moji and af  then
                HeeAl = HeeAl .. "3หมัด👊 โมจิตื่นครบ🎂"
            elseif ThreeMalee and Moji then
                HeeAl = HeeAl .. "3หมัด👊 โมจิตื่นไม่ครบ🎂"
            elseif ThreeMalee and CDK then
                HeeAl = HeeAl .. "3หมัด👊 ดาบคู่⚔️"
            elseif ThreeMalee then
                HeeAl = HeeAl .. "3หมัด👊" 
                
            elseif TwoMalee then
                HeeAl = HeeAl .. "ไก่กาก2หมัด👊"
            elseif OneMalee then 
                HeeAl = HeeAl .. "ไก่กาก1หมัด👊"  
            end
        elseif Level < 2450 then
            HeeAl = HeeAl.."Level :"..Level
        end           
        HeeAl = HeeAl.." ]"            

        end

        Request({
                Method = "POST",
                Url = "http://localhost:7963/SetAlias?Account=" .. Username,
                Body = HeeAl
                })
    end
end)







spawn(function()
    while true do wait()
        pcall(function()
            local World = ""
            local Money = ""
            local Username = game.Players.LocalPlayer.Name
            local Fragment = ""
            local Level = ""
            local Fruit = ""
            local Material = ""
            local Race = ""
            local FruitMastery = "N/A"
            local FruitName = "N/A"
            local Gun = ""
            local RequestgetInventory
            local HttpService = game:GetService("HttpService")
            local Malee = ""
            local Sword = ""
            local Accesorry = ""
            local Awake = ""
            local Combo = ""
            local MFStatus = "❌"
            local HelmedStatus = "❌"
            local function formatNumber(number)
                local i, k, j = tostring(number):match("(%-?%d?)(%d*)(%.?.*)")
                return i .. k:reverse():gsub("(%d%d%d)", "%1,"):reverse() .. j
            end
            local function notifyCheck(types, ...)
                if types == "Notify" then
                    require(game.ReplicatedStorage.Notification).new(...):Display()
                end
            end
            for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryWeapons")) do
                if  v.Name == "Valkyrie Helm" then
                    Helmed = true
                end
            end
            w = 0

            function format_number_(n)
                local x = n
                local res = x:gsub(",","")
                return tonumber(res)
            end

            function foo(n)
                if n >= 10^6 then
                    return string.format("%.0fM", n / 10^6)
                elseif n >= 10^3 then
                    return string.format("%.0fK", n / 10^3)
                else
                    return tostring(n)
                end
            end

            Money = foo(format_number_(formatNumber(game:GetService("Players").LocalPlayer.Data.Beli.Value)))
            Fragment = foo(game:GetService("Players").LocalPlayer.Data.Fragments.Value)
            Race = game:GetService("Players").LocalPlayer.Data.Race.Value
            Level = game:GetService("Players").LocalPlayer.Data.Level.Value

            local placeId = game.PlaceId
            if placeId == 2753915549 then
                World = "1"
            elseif placeId == 4442272183 then
                World = "2"
            elseif placeId == 7449423635 then
                World = "3"
            end

            RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
            for i, v in pairs(RequestgetInventory) do
                if v["Type"] == "Sword" then
                    if Sword == "" then
                        if _G.HeeBF["LogInventory"] and _G.OnlyRareItemPlus  then
                            if table.find(_G.HeeBF["LogInventory"], v["Name"]) then
                                Sword = v["Name"].."[Mas Lv. "..v["Mastery"].."]"
                            end
                        else
                            Sword = v["Name"].."[Mas Lv. "..v["Mastery"].."]"
                        end
                    else
                        if _G.HeeBF["LogInventory"] and _G.OnlyRareItemPlus then
                            if table.find(_G.HeeBF["LogInventory"], v["Name"]) then
                                Sword = Sword..", ".. v["Name"].."[Mas Lv."..v["Mastery"].."]"
                            end
                        else
                            Sword = Sword..", ".. v["Name"].."[Mas Lv."..v["Mastery"].."]"
                        end
                    end
                end
                if v["Type"] == "Wear" then
                    if Accesorry == "" then
                        Accesorry = v["Name"] .. " "
                    else
                        Accesorry = Accesorry .. v["Name"] .. " "
                    end
                end
                if v["Type"] == "Blox Fruit" then
                    if Fruit == "" then
                        if _G.ShowLegendary then
                            if v["Rarity"] == 3 or v["Rarity"] == 4  then
                                Fruit = v["Name"] .. ","
                            end
                        else
                            Fruit = v["Name"] .. ","
                        end
                    else
                        if _G.ShowLegendary then
                            if v["Rarity"] == 3 or v["Rarity"] == 4 then
                                Fruit = Fruit .. v["Name"] .. ","
                             end
                        else
                            Fruit = Fruit .. v["Name"] .. ","
                        end
                    end
                end
                if v["Type"] == "Material" then
                    if Material == "" then
                        Material = v["Name"] .. " "
                    else
                        Material = Material .. v["Name"] .. "( x" .. v["Count"] .. " )" .. " "
                    end
                end
                if v["Type"] == "Gun" then
                    if Gun == "" then
                        Gun = v["Name"] .. " "
                    else
                        Gun = Gun .. v["Name"] .. " "
                    end
                end
            end

            local args = {[1] = "BuyDeathStep",[2] = true}
            DeathStep = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            if DeathStep == 1 then
                HasDeathStep = true
            else
                HasDeathStep = false
            end
            wait(0.2)


            local args = {[1] = "BuySharkmanKarate",[2] = true}
            SharkmanKarate = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            if SharkmanKarate == 1 then
                HasSharkmanKarate = true
            else
                HasSharkmanKarate = false
            end
            wait(0.2)


            local args = {[1] = "BuySuperhuman",[2] = true}
            Superhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            if Superhuman == 1 then
                HasSuperhuman = true
            else
                HasSuperhuman = false
            end
            wait(0.2)


            local args = {[1] = "BuyElectricClaw",[2] = true}  
            ElectricClaw = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            if ElectricClaw == 1 then
                HasElectricClaw = true
            else
                HasElectricClaw = false
            end
            wait(0.2)


            local args = {[1] = "BuyDragonTalon",[2] = true}
            DragonTalon = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            if type(DragonTalon) == "number" then
                if DragonTalon == 1 then
                    HasDragonTalon = true
                else
                    HasDragonTalon = false
                end
            end
            wait(0.2)


            local args = {[1] = "BuyGodhuman",[2] = true}
            Godhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            if type(Godhuman) == "number" then
                if Godhuman == 1 then
                    HasGodhuman = true
                else
                    HasGodhuman = false
                end
            end

            if HasSuperhuman then
                Malee = Malee .. "Superhuman,"
            end
            if HasDeathStep then
                Malee = Malee .. "DeathStep,"
            end
            if HasElectricClaw then
                Malee = Malee .. "ElectricClaw,"
            end
            if HasSharkmanKarate then
                Malee = Malee .. "Sharkman Karate,"
            end
            if HasDragonTalon then
                Malee = Malee .. "Dragon Talon,"
            end
            if HasGodhuman then
                Malee = Malee .. "Godhuman"
            end

            local MC = 0
            if HasGodhuman then MC = MC + 1 end
            if HasSuperhuman then MC = MC + 1 end
            if HasElectricClaw then MC = MC + 1 end
            if HasDragonTalon then MC = MC + 1 end
            if HasDeathStep then MC = MC + 1 end
            if HasSharkmanKarate then MC = MC + 1 end

            if game:GetService("Players").LocalPlayer.Data.DevilFruit.Value == '' then
                FruitMastery = "None"
                FruitName = "N/A"
            else

            for _i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v:IsA("Tool") then
                    if v.ToolTip == "Blox Fruit" then
                        FruitMastery = v.Level.Value
                        FruitName = v.Name
                    end
                end
            end
            end

            HHH = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getAwakenedAbilities")
            if HHH then
            S = 0	
                for i, v in pairs(HHH) do
                    if v["Awakened"] then
                    S = S + 1
                    end
                end
            else
                S = 0
            end
            
            local Type = ""
            RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
            for i, v in pairs(RequestgetInventory) do
                if v["Type"] == "Sword" then
                    if v["Name"] == "Cursed Dual Katana" then
                        CDKHas = true
                     end
                end
            end

            RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
            for i, v in pairs(RequestgetInventory) do
                if v["Type"] == "Sword" then
                    if v["Name"] == "Dark Dagger" then
                        DDG = true
                    end
                end
            end
 

            if HasDragonTalon and HasElectricClaw and HasSuperhuman and HasSharkmanKarate and HasDeathStep and HasGodhuman then
                SixMalee = true
            end
            if _G.HeeBF["Sheet language"] == "Thai" then
                if DDG and CDKHas and S == 6 then
                    Type = "รวมมิตร"
                elseif CDKHas and S == 6 then
                    Type = "โมจิตื่นดาบคู่"
                elseif S == 6 then 
                    Type = "โมจิตื่น"    
                elseif CDKHas then
                    Type = "ดาบคู่"
                elseif SixMalee then
                    Type = "6หมัด"
                else
                    Type = "ไก่กากน่าสมเพช"
                end
            end
   

            local str = Fruit
            local result = {}
            for word in string.gmatch(str, "%a+") do
            local found = false
            for i, v in ipairs(result) do
            if v == word then
            found = true
            break
            end
            end
            if not found then
            table.insert(result, word)
            end
            end

            local NewFruitNameInven = table.concat(result, ", ")
            function GetAwaken()
                if S == 1 then
                    return "Z"
                elseif S ==2 then
                    return "Z, X"
                elseif S ==3  then
                    return "Z, X, C"
                elseif S == 4 then
                    return "Z X, C, V"
                elseif S == 5 then
                    return "Z, X, C, V, F"
                elseif S == 6  then
                    return "Z, X, C, V, F, Tap"
                else
                    return "None"
                end
            end
            if CurrentFruitName == "" then

            end
            local folders = {
            "Hee Service/AutoSaveDes",
            }
            for _, folder in ipairs(folders) do
                if not isfolder(folder) then
                    makefolder(folder)
                end
            end

            local showraceSave = ""
            local THrace = ""
            local Raceee = game.Players.LocalPlayer.Data.Race.Value
            local RaceV2 = game:GetService("Players").LocalPlayer.Data.Race:FindFirstChild("Evolved")
            local RaceV4 = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Awakening")
            local Ghoull = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Heightened Senses")
            local Angell = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Heavenly Blood")
            local Humann = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Last Resort")
            local Minkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Agility")
            local Sharkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Water Body")
            local Cybrogg = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Energy Core")

            if Raceee == "Human" then
            THrace = "มนุษย์"
            elseif Raceee == "Mink" then
            THrace = "มิ้ง"
            elseif Raceee == "Skypiea" then
            THrace = "นางฟ้า"
            elseif Raceee == "Fishman" then
            THrace = "เงือก"
            elseif Raceee == "Cybrog" then
            THrace = "ไซบ็อก"
            elseif Raceee == "Ghoul" then
            THrace = "กูล"
            end

            if RaceV4 then
            showraceSave = THrace .." V4👑"
            elseif Humann then
            showraceSave = THrace .." V3"
            elseif Minkk then
            showraceSave = THrace .." V3"
            elseif Angell then
            showraceSave = THrace.." V3"
            elseif Sharkk then
            showraceSave = THrace.." V3"
            elseif Cybrogg  then
            showraceSave = THrace.." V3"
            elseif Ghoull then
            showraceSave = THrace.." V3"
            elseif RaceV2 then 
            showraceSave = THrace.." V2"
            else
            showraceSave = THrace.." V1"
            end

            if GetMaterial("Mirror Fractal") == true then
            MFStatus = "✅"
            end
            if Helmed == true then
            HelmedStatus = "✅"
            end
            local input_str = readfile("Hee Service/Enter Password.json")
            local player_name = game.Players.LocalPlayer.Name 
            local player_str = input_str:match(player_name .. ":%S+")
            _G.SaveDesScription = {
                Name = Username,
                Password = player_str,
                Sea = World,
                Lvl = Level,
                Fragments = Fragment,
                Race = game:GetService("Players").LocalPlayer.Data.Race.Value,
                Mirror = MFStatus,
                Valkyrie = HelmedStatus,
                Fruit = CurrentFruitName..' [ M. '.. FruitMastery..' ]',
                AwakedSkill = GetAwaken(),
                FruitInventory = NewFruitNameInven,
                TypeAccount = Type,
                Bele = Money,
                FightingStyle = Malee,
                SwordInven = Sword,
                ShowRaceSheet = showraceSave,
            }
            writefile("Hee Service/AutoSaveDes/".. game.Players.LocalPlayer.Name.. ".json", game:GetService("HttpService"):JSONEncode(_G.SaveDesScription))

        end)
    end
end)

local function len(x)
    local q = 0
    for i, v in pairs(x) do
        q = q + 1
    end
    return q
end
function getRartiy(v)
    if v["Rarity"] == 3 and _G.Legendary then
        return v
    else
        return v
    end
end
spawn(function()
    while true do
        wait()
        local x, p =
            pcall(
            function()
                Nexus:NewLine()
                Nexus:CreateLabel("loginfo", "BestSheet")
                Nexus:NewLine()
                Nexus:CreateTextBox("loginput", _G.HeeBF["BestSheet"], {200, 20})
                Nexus:CreateButton("logbtn", "Log Sheet", {100, 35})
                Nexus:CreateButton("logAdvance", "Advance Log", {100, 35})
                Nexus:CreateButton("Clear", "Clear File Advance Log", {200, 35})
                Nexus:CreateButton("Rejoin", "Rejoin", {100, 35})
                Nexus:CreateButton("Shutdown", "Shutdown", {100, 35})
                Nexus:CreateButton("World2", "World2", {100, 35})
                Nexus:CreateButton("World3", "World3", {100, 35})
                Nexus:NewLine()
                Nexus:CreateButton("Human", "Human", {50, 25})
                Nexus:CreateButton("Mink", "Mink", {50, 25})
                Nexus:CreateButton("Angel", "Angel", {50, 25})
                Nexus:CreateButton("Fishman", "Fishman", {50, 25})
                Nexus:NewLine()
            end)
        if x then
            break
        end
    end
end)
Nexus:OnButtonClick("Rejoin",function()
    game:GetService("TeleportService"):Teleport(game.PlaceId)
end)
Nexus:OnButtonClick("Clear",function()
    if isfolder then
        delfolder('Hee Service/AutoSaveDes')
    end
end)
Nexus:OnButtonClick("Shutdown",function()
    Game:Shutdown()
end)

local Humann = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Last Resort")
local Minkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Agility")
local Sharkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Water Body")
Humann = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Last Resort")
Minkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Agility")
Sharkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Water Body")

Nexus:OnButtonClick("World2",function()
    if Humann or Minkk or Sharkk then
        local args = {[1] = "TravelZou"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        Nexus:Log("You Race V3 Dont Back W2    "..game.Players.LocalPlayer.Name)
    else
        local args = {[1] = "TravelDressrosa"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
end) 

Nexus:OnButtonClick("World3",function()
    if Humann or Minkk or Sharkk then
        local args = {[1] = "TravelZou"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    else
        Nexus:Log("You Not Race V3 Dont Go W3    "..game.Players.LocalPlayer.Name)
    end
end)


Nexus:OnButtonClick("Human",function()
    local HumanR = false
    repeat
        Race = game.Players.LocalPlayer.Data.Race.Value
        wait(2)
        if Race == "Human" then
            HumanR = true
        elseif HumanR == false then
            local args = {[1] = "BlackbeardReward",[2] = "Reroll",[3] = "2"}
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end 
    until (HumanR == true)
end)
Nexus:OnButtonClick("Mink",function()
local MinkR = false
    repeat
        Race = game.Players.LocalPlayer.Data.Race.Value
        wait(2)
        if Race == "Mink" then
            MinkR = true
        elseif MinkR == false then
            local args = {[1] = "BlackbeardReward",[2] = "Reroll",[3] = "2"}
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end
    until (MinkR == true)
end)
Nexus:OnButtonClick("Angel",function()
local AngelR = false
    repeat
        Race = game.Players.LocalPlayer.Data.Race.Value
        wait(2)
        if Race == "Skypiea" then
            AngelR = true
        elseif AngelR == false then
            local args = {[1] = "BlackbeardReward",[2] = "Reroll",[3] = "2"}
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end
    until (AngelR == true)
end)
Nexus:OnButtonClick("Fishman",function()
    local FishmanR = false
    repeat
        Race = game.Players.LocalPlayer.Data.Race.Value
        wait(2)
        if Race == "Fishman" then
            FishmanR = true
        elseif FishmanR == false then
            local args = {[1] = "BlackbeardReward",[2] = "Reroll",[3] = "2"}
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end
    until (FishmanR == true)
end)










function PraseFruit()
    r = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getAwakenedAbilities")
    if r then
        q = len(r)
        w = 0
        for i, v in pairs(r) do
            if v["Awakened"] then
                w = w + 1
            end
        end
        return " | A. " .. w .. " )"
    else
        return " | A. N/A )"
    end
end
Nexus:OnButtonClick("logbtn",function()
    url = Nexus:GetText("loginput")
    warn("Press Log Button!!")
    local Rq = syn.request
    Rq({
        Method = "POST",
        Url = "http://localhost:7963/SetAlias?Account=" ..  game.Players.LocalPlayer.Name,
        Body = "[ Hee Sheet Service ]"
        })
    Rq({
        Method = "POST",
        Url = "http://localhost:7963/SetDescription?Account=" ..  game.Players.LocalPlayer.Name,
        Body = "Send Sheet - In Progress"
        })
    local Money = ""
    local Username = game.Players.LocalPlayer.Name
    local Fragment = ""
    local Level = ""
    local Fruit = ""
    local Material = ""
    local Race = ""
    local World = ""
    local FruitMastery = "N/A"
    local FruitName = "N/A"
    local Gun = ""
    local RequestgetInventory
    local HttpService = game:GetService("HttpService")
    local Malee = ""
    local Sword = ""
    local Accesorry = ""
    local Awake = ""
    local Combo = ""
    local MFStatus = "❌"
    local HelmedStatus = "❌"
    local function formatNumber(number)
            local i, k, j = tostring(number):match("(%-?%d?)(%d*)(%.?.*)")
            return i .. k:reverse():gsub("(%d%d%d)", "%1,"):reverse() .. j
        end
        local function notifyCheck(types, ...)
            if types == "Notify" then
                require(game.ReplicatedStorage.Notification).new(...):Display()
            end
        end
    for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryWeapons")) do
        if  v.Name == "Valkyrie Helm" then
            Helmed = true
        end
    end
    w = 0
        
    function format_number_(n)
        local x = n
        local res = x:gsub(",","")
        return tonumber(res)
    end
    function foo(n)
        if n >= 10^6 then
            return string.format("%.0fM", n / 10^6)
        elseif n >= 10^3 then
            return string.format("%.0fK", n / 10^3)
        else
            return tostring(n)
        end
    end
        
    Money = foo(format_number_(formatNumber(game:GetService("Players").LocalPlayer.Data.Beli.Value)))
    Fragment = foo(game:GetService("Players").LocalPlayer.Data.Fragments.Value)
    Race = game:GetService("Players").LocalPlayer.Data.Race.Value
    Level = game:GetService("Players").LocalPlayer.Data.Level.Value
        
    local placeId = game.PlaceId
    if placeId == 2753915549 then
        World = "1"
    elseif placeId == 4442272183 then
        World = "2"
    elseif placeId == 7449423635 then
        World = "3"
    end
        
    RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
        for i, v in pairs(RequestgetInventory) do
            if v["Type"] == "Sword" then
                if Sword == "" then
                    if _G.HeeBF["LogInventory"] and _G.OnlyRareItemPlus  then
                        if table.find(_G.HeeBF["LogInventory"], v["Name"]) then
                            Sword = v["Name"].."[Mas Lv. "..v["Mastery"].."]"
                        end
                    else
                        Sword = v["Name"].."[Mas Lv. "..v["Mastery"].."]"
                    end
                else
                    if _G.HeeBF["LogInventory"] and _G.OnlyRareItemPlus then
                        if table.find(_G.HeeBF["LogInventory"], v["Name"]) then
                            Sword = Sword..", ".. v["Name"].."[Mas Lv."..v["Mastery"].."]"
                        end
                    else
                        Sword = Sword..", ".. v["Name"].."[Mas Lv."..v["Mastery"].."]"
                    end
                end
            end
            if v["Type"] == "Wear" then
                if Accesorry == "" then
                    Accesorry = v["Name"] .. " "
                else
                    Accesorry = Accesorry .. v["Name"] .. " "
                end
            end
            if v["Type"] == "Blox Fruit" then
                if Fruit == "" then
                    if _G.ShowLegendary then
                        if v["Rarity"] == 3 or v["Rarity"] == 4  then
                            Fruit = v["Name"] .. ","
                        end
                    else
                        Fruit = v["Name"] .. ","
                    end
                else
                    if _G.ShowLegendary then
                        if v["Rarity"] == 3 or v["Rarity"] == 4 then
                            Fruit = Fruit .. v["Name"] .. ","
                        end
                    else
                        Fruit = Fruit .. v["Name"] .. ","
                    end
                end
            end
            if v["Type"] == "Material" then
                if Material == "" then
                    Material = v["Name"] .. " "
                else
                    Material = Material .. v["Name"] .. "( x" .. v["Count"] .. " )" .. " "
                end
            end
            if v["Type"] == "Gun" then
                if Gun == "" then
                    Gun = v["Name"] .. " "
                else
                    Gun = Gun .. v["Name"] .. " "
                end
            end
        end

    local args = {[1] = "BuyDeathStep",[2] = true}
    DeathStep = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if DeathStep == 1 then
        HasDeathStep = true
    else
        HasDeathStep = false
    end
    wait(0.2)


    local args = {[1] = "BuySharkmanKarate",[2] = true}
    SharkmanKarate = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if SharkmanKarate == 1 then
        HasSharkmanKarate = true
    else
        HasSharkmanKarate = false
    end
    wait(0.2)


    local args = {[1] = "BuySuperhuman",[2] = true}
    Superhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if Superhuman == 1 then
        HasSuperhuman = true
    else
        HasSuperhuman = false
    end
    wait(0.2)


    local args = {[1] = "BuyElectricClaw",[2] = true}  
    ElectricClaw = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if ElectricClaw == 1 then
        HasElectricClaw = true
    else
        HasElectricClaw = false
    end
    wait(0.2)


    local args = {[1] = "BuyDragonTalon",[2] = true}
    DragonTalon = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if type(DragonTalon) == "number" then
        if DragonTalon == 1 then
            HasDragonTalon = true
        else
            HasDragonTalon = false
        end
    end
    wait(0.2)


    local args = {[1] = "BuyGodhuman",[2] = true}
    Godhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if type(Godhuman) == "number" then
        if Godhuman == 1 then
            HasGodhuman = true
        else
            HasGodhuman = false
        end
    end

    if HasSuperhuman then
        Malee = Malee .. "\nSuperhuman,"
    end
    if HasDeathStep then
        Malee = Malee .. "DeathStep,"
    end
    if HasElectricClaw then
        Malee = Malee .. "ElectricClaw,"
    end
    if HasSharkmanKarate then
        Malee = Malee .. "Sharkman Karate,"
    end
    if HasDragonTalon then
        Malee = Malee .. "Dragon Talon,"
    end
    if HasGodhuman then
        Malee = Malee .. "Godhuman"
    end

    if game:GetService("Players").LocalPlayer.Data.DevilFruit.Value == '' then
        FruitMastery = "None"
        FruitName = "N/A"
    else
        for _i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                if v.ToolTip == "Blox Fruit" then
                    FruitMastery = v.Level.Value
                    FruitName = v.Name
                end
            end
        end
    end
        
    HHH = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getAwakenedAbilities")
    if HHH then
        S = 0	
        for i, v in pairs(HHH) do
            if v["Awakened"] then
                S = S + 1
            end
        end
        else
            S = 0
    end

    local Type = ""
    RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
    for i, v in pairs(RequestgetInventory) do
        if v["Type"] == "Sword" then
            if v["Name"] == "Cursed Dual Katana" then
                CDKHas = true
            end
        end
    end
    RequestgetInventory = game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")
    for i,x in pairs(RequestgetInventory) do
         if x["Type"] == "Sword" then
             if x["Name"] == "Dark Dagger" then
               DDG = true
             end
         end
    end
    if HasDragonTalon and HasElectricClaw and HasSuperhuman and HasSharkmanKarate and HasDeathStep and HasGodhuman then
        SixMalee = true
    end
    if _G.HeeBF["Sheet language"] == "Thai" then
        if DDG and CDKHas and S == 6 then
            Type = "รวมมิตร"
        elseif CDKHas and S == 6 then
            Type = "โมจิตื่นดาบคู่"
        elseif S == 6 then 
            Type = "โมจิตื่น"    
        elseif CDKHas then
            Type = "ดาบคู่" 
        elseif SixMalee then
            Type = "6หมัด"
        else
            Type = "ไก่กากน่าสมเพช"
        end
    end
        
    if GetMaterial("Mirror Fractal") == true then
        MFStatus = "✅"
    end
    if Helmed == true then
        HelmedStatus = "✅"
    end
        
    local str = Fruit
    local result = {}
    for word in string.gmatch(str, "%a+") do
        local found = false
        for i, v in ipairs(result) do
            if v == word then
                found = true
                break
            end
        end
        if not found then
            table.insert(result, word)
        end
    end
    local input_str = readfile("Hee Service/Enter Password.json")
    local player_name = game.Players.LocalPlayer.Name 
    local player_str = input_str:match(player_name .. ":%S+")
    if player_str then
        print(player_str)
    end

    local NewFruitNameInven = table.concat(result, ", ")
    function GetAwaken()
        if S == 1 then
            return "Z"
        elseif S ==2 then
            return "Z, X"
        elseif S ==3  then
            return "Z, X, C"
        elseif S == 4 then
            return "Z X, C, V"
        elseif S == 5 then
            return "Z, X, C, V, F"
        elseif S == 6  then
            return "Z, X, C, V, F, Tap"
        else
            return "None"
        end
    end

    local showraceSave = ""
    local THrace = ""
    local Raceee = game.Players.LocalPlayer.Data.Race.Value
    local RaceV2 = game:GetService("Players").LocalPlayer.Data.Race:FindFirstChild("Evolved")
    local RaceV4 = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Awakening")
    local Ghoull = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Heightened Senses")
    local Angell = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Heavenly Blood")
    local Humann = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Last Resort")
    local Minkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Agility")
    local Sharkk = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Water Body")
    local Cybrogg = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Energy Core")

    if Raceee == "Human" then
    THrace = "มนุษย์"
    elseif Raceee == "Mink" then
    THrace = "มิ้ง"
    elseif Raceee == "Skypiea" then
    THrace = "นางฟ้า"
    elseif Raceee == "Fishman" then
    THrace = "เงือก"
    elseif Raceee == "Cybrog" then
    THrace = "ไซบ็อก"
    elseif Raceee == "Ghoul" then
    THrace = "กูล"
    end

    if RaceV4 then
    showraceSave = THrace .." V4👑"
    elseif Humann then
    showraceSave = THrace .." V3"
    elseif Minkk then
    showraceSave = THrace .." V3"
    elseif Angell then
    showraceSave = THrace.." V3"
    elseif Sharkk then
    showraceSave = THrace.." V3"
    elseif Cybrogg  then
    showraceSave = THrace.." V3"
    elseif Ghoull then
    showraceSave = THrace.." V3"
    elseif RaceV2 then 
    showraceSave = THrace.." V2"
    else
    showraceSave = THrace.." V1"
    end

    local LogSheet
    if _G.HeeBF["Sheet Modes"] == 1 then 
        LogSheet =
        HttpService:JSONEncode({
            ["ประเภทรหัส"] = Type,
            ["Account"] = Username,
            ["รหัส"] = player_str,
            ["หมวกแอดมิน"] = HelmedStatus,
            ["กระจก"] = MFStatus,
            ["ดาบ"] = Sword,
            ["ผลในกล่อง"] = NewFruitNameInven,
            ["ผล"] = CurrentFruitName..' [ M. '.. FruitMastery..' ]',
            ["สกิลที่ตื่น"] = GetAwaken(),
            ["World"] = World,
            ["หมัด"] = Malee,
            ["เลเวล"] = Level,
            ["เงิน"] = Money,
            ["เงินม่วง"] = Fragment,
            ["เผ่า"] = showraceSave,
        })
    end
    syn.request({
        ["Url"] = url,
        ["Method"] = "POST",
        ["Body"] = LogSheet,
        ["Headers"] = 
            {
            ["Content-Type"] = "application/json"
            }
        })
    wait(2)
    local user = game.Players.LocalPlayer.Name
    Rq({
        Method = "POST",
        Url = "http://localhost:7963/SetAlias?Account="..user,
        Body = "[ Hee Sheet Service ]"
        })
    Rq({
        Method = "POST",
        Url = "http://localhost:7963/SetDescription?Account="..user,
        Body = "[ Send Sheet - Successfully ]"
        })
    Game:Shutdown()
end)



Nexus:OnButtonClick("logAdvance",function()
    url = Nexus:GetText("loginput")
    warn("Press Log Button!!")
    local HttpService = game:GetService("HttpService")
    local allData = {}
    for _, fileName in ipairs(listfiles("Hee Service/AutoSaveDes")) do
        local playerData = nil
        local file = readfile(fileName)
        if file then
            playerData = HttpService:JSONDecode(file)
        end
        if _G.HeeBF["Sheet Modes"] == 1 then
            if playerData then
                local data = {
                    ["ประเภทรหัส"] = playerData.TypeAccount,
                    ["Account"] = playerData.Name,
                    ["รหัส"] = playerData.Password,
                    ["เลเวล"] = playerData.Lvl,
                    ["เผ่า"] = playerData.ShowRaceSheet,
                    ["World"] = playerData.Sea,
                    ["หมวกแอดมิน"] = playerData.Valkyrie,
                    ["กระจก"] = playerData.Mirror,
                    ["ผล"] = playerData.Fruit,
                    ["สกิลที่ตื่น"] = playerData.AwakedSkill,
                    ["ดาบ"]= playerData.SwordInven,
                    ["หมัด"] = playerData.FightingStyle,
                    ["ผลในกล่อง"] = playerData.FruitInventory,
                    ["เงิน"] = playerData.Bele,
                    ["เงินม่วง"] = playerData.Fragments
                }
                table.insert(allData, data)
            end
        end
    end
    local LogAdvance = HttpService:JSONEncode(allData)
    syn.request({
                ["Url"] = url,
                ["Method"] = "POST",
                ["Body"] = LogAdvance,
                ["Headers"] = {
                    ["Content-Type"] = "application/json"
                }
            })
    wait(2)
    for _, fileName in ipairs(listfiles("Hee Service/AutoSaveDes")) do
        file = game:GetService('HttpService'):JSONDecode(readfile(fileName))
        UserAV = (file["Name"])
        Rq = syn.request 
        Rq({
            Method = "POST",
            Url = "http://localhost:7963/SetAlias?Account="..UserAV,
            Body = " "
        })
        Rq({
            Method = "POST",
            Url = "http://localhost:7963/SetDescription?Account="..UserAV,
            Body = "[ AdvanceLog Sheet - Successfully ]"
            })
    end
end)
task.spawn(function() 
    local cu = 0;
    local mx = _G.TimeAFK;
    local q = nil;
    spawn(function() 
        while true do wait(60) 
            if u == 0 then 
                pcall(function() 
                    q = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    u = u + 1;
                end)
            end
            if u ~= 0 then 
                if type(q) ~= "nil" then 
                    if(q.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then
                        q = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        u = u + 1;
                    end
                    if(q.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 10 then
                        q = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        u = 0;
                    end
                end
               if u >= (mx + 1) then 
                    _G.ScriptWhenNoMove()
                end
            end
        end
    end)
    print('Anti AFK (No Move) Is Load')	
end)

print("Scripts Loaded")
